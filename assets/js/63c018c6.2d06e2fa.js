"use strict";(self.webpackChunkuc_2_docs=self.webpackChunkuc_2_docs||[]).push([[9025],{3905:(e,n,a)=>{a.d(n,{Zo:()=>c,kt:()=>g});var t=a(67294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function i(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function o(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?i(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function l(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=t.createContext({}),u=function(e){var n=t.useContext(s),a=n;return e&&(a="function"==typeof e?e(n):o(o({},n),e)),a},c=function(e){var n=u(e.components);return t.createElement(s.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},p=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(a),g=r,d=p["".concat(s,".").concat(g)]||p[g]||m[g]||i;return a?t.createElement(d,o(o({ref:n},c),{},{components:a})):t.createElement(d,o({ref:n},c))}));function g(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=p;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var u=2;u<i;u++)o[u]=a[u];return t.createElement.apply(null,o)}return t.createElement.apply(null,a)}p.displayName="MDXCreateElement"},7323:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var t=a(87462),r=(a(67294),a(3905));const i={},o="ImSwitch Configuration",l={unversionedId:"ImSwitch/Advanced/Configuration/README",id:"ImSwitch/Advanced/Configuration/README",title:"ImSwitch Configuration",description:"This section provides comprehensive guides for configuring ImSwitch with various hardware components and use cases.",source:"@site/docs/05_ImSwitch/Advanced/03_Configuration/README.md",sourceDirName:"05_ImSwitch/Advanced/03_Configuration",slug:"/ImSwitch/Advanced/Configuration/",permalink:"/docs/ImSwitch/Advanced/Configuration/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Updating ImSwitch and UC2 Components",permalink:"/docs/ImSwitch/Advanced/Usage/Updates"},next:{title:"ImSwitch Tutorials",permalink:"/docs/ImSwitch/Advanced/Tutorials/"}},s={},u=[{value:"Configuration Overview",id:"configuration-overview",level:2},{value:"Configuration Structure",id:"configuration-structure",level:2},{value:"Configuration Files Location",id:"configuration-files-location",level:3},{value:"Main Configuration File",id:"main-configuration-file",level:3},{value:"Hardware Configuration",id:"hardware-configuration",level:2},{value:"1. UC2-ESP32 Basic Setup",id:"1-uc2-esp32-basic-setup",level:3},{value:"2. Advanced Multi-Color Setup",id:"2-advanced-multi-color-setup",level:3},{value:"Device Managers",id:"device-managers",level:2},{value:"Camera Managers",id:"camera-managers",level:3},{value:"Stage Managers",id:"stage-managers",level:3},{value:"Laser/LED Managers",id:"laserled-managers",level:3},{value:"Communication Settings",id:"communication-settings",level:2},{value:"Serial/USB Communication",id:"serialusb-communication",level:3},{value:"WiFi/Network Communication",id:"wifinetwork-communication",level:3},{value:"Configuration Templates",id:"configuration-templates",level:2},{value:"1. Basic Microscope",id:"1-basic-microscope",level:3},{value:"2. Multi-Channel Fluorescence",id:"2-multi-channel-fluorescence",level:3},{value:"3. High-Content Screening",id:"3-high-content-screening",level:3},{value:"4. Custom Research Setup",id:"4-custom-research-setup",level:3},{value:"Advanced Configuration",id:"advanced-configuration",level:2},{value:"Custom Device Managers",id:"custom-device-managers",level:3},{value:"Widget Configuration",id:"widget-configuration",level:3},{value:"Scripting Integration",id:"scripting-integration",level:3},{value:"Validation and Testing",id:"validation-and-testing",level:2},{value:"Configuration Validation",id:"configuration-validation",level:3},{value:"Common Validation Errors",id:"common-validation-errors",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Organization",id:"organization",level:3},{value:"Performance",id:"performance",level:3},{value:"Maintenance",id:"maintenance",level:3},{value:"Next Steps",id:"next-steps",level:2},{value:"Related Resources",id:"related-resources",level:2}],c={toc:u};function m(e){let{components:n,...a}=e;return(0,r.kt)("wrapper",(0,t.Z)({},c,a,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"imswitch-configuration"},"ImSwitch Configuration"),(0,r.kt)("p",null,"This section provides comprehensive guides for configuring ImSwitch with various hardware components and use cases."),(0,r.kt)("h2",{id:"configuration-overview"},"Configuration Overview"),(0,r.kt)("p",null,"ImSwitch uses JSON configuration files to define:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Hardware setup"),": Cameras, stages, lasers, LEDs"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Device managers"),": Software interfaces for hardware control"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"System settings"),": Paths, options, and preferences"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Integration settings"),": External software connections")),(0,r.kt)("h2",{id:"configuration-structure"},"Configuration Structure"),(0,r.kt)("h3",{id:"configuration-files-location"},"Configuration Files Location"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Default Locations:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Windows"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"%USERPROFILE%\\Documents\\ImSwitchConfig\\")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"macOS"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"/Users/$USERNAME/ImSwitchConfig/")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Linux"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"~/ImSwitchConfig/"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Folder Structure:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"ImSwitchConfig/\n\u251c\u2500\u2500 config/\n\u2502   \u2514\u2500\u2500 imcontrol_options.json     # Main configuration\n\u251c\u2500\u2500 imcontrol_setups/\n\u2502   \u251c\u2500\u2500 uc2_basic.json             # Hardware configurations\n\u2502   \u251c\u2500\u2500 uc2_multicolor.json\n\u2502   \u2514\u2500\u2500 custom_setup.json\n\u251c\u2500\u2500 imcontrol_slm/                  # SLM patterns\n\u2514\u2500\u2500 scripts/                       # Custom scripts\n")),(0,r.kt)("h3",{id:"main-configuration-file"},"Main Configuration File"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"imcontrol_options.json")," file defines:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "setupFileName": "uc2_basic.json",\n    "recording": {\n        "outputFolder": "./recordings",\n        "includeDateInOutputFolder": true\n    },\n    "watcher": {\n        "outputFolder": "./scripts"\n    }\n}\n')),(0,r.kt)("h2",{id:"hardware-configuration"},"Hardware Configuration"),(0,r.kt)("h3",{id:"1-uc2-esp32-basic-setup"},"1. UC2-ESP32 Basic Setup"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"File"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"imcontrol_setups/uc2_basic.json")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "rs232devices": {\n    "ESP32": {\n      "managerName": "ESP32Manager",\n      "managerProperties": {\n        "host_": "192.168.1.100",\n        "serialport": "/dev/ttyUSB0",\n        "serialport_windows": "COM3"\n      }\n    }\n  },\n  "positioners": {\n    "ESP32Stage": {\n      "managerName": "ESP32StageManager",\n      "managerProperties": {\n        "rs232device": "ESP32",\n        "stepsizeX": -0.3125,\n        "stepsizeY": -0.3125,\n        "stepsizeZ": 0.3125\n      },\n      "axes": ["X", "Y", "Z"],\n      "forScanning": true,\n      "forPositioning": true\n    }\n  },\n  "lasers": {\n    "LED": {\n      "managerName": "ESP32LEDLaserManager",\n      "managerProperties": {\n        "rs232device": "ESP32",\n        "channel_index": 1\n      },\n      "wavelength": 635,\n      "valueRangeMin": 0,\n      "valueRangeMax": 100\n    }\n  },\n  "detectors": {\n    "WidefieldCamera": {\n      "managerName": "OpenCVCamManager",\n      "managerProperties": {\n        "cameraListIndex": 0,\n        "OpenCVCamera": {\n          "exposure": 0,\n          "gain": 0\n        }\n      },\n      "forAcquisition": true,\n      "forFocusLock": true\n    }\n  }\n}\n')),(0,r.kt)("h3",{id:"2-advanced-multi-color-setup"},"2. Advanced Multi-Color Setup"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"File"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"imcontrol_setups/uc2_multicolor.json")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "rs232devices": {\n    "ESP32": {\n      "managerName": "ESP32Manager",\n      "managerProperties": {\n        "host_": "192.168.43.129",\n        "serialport": "/dev/ttyUSB0"\n      }\n    }\n  },\n  "positioners": {\n    "ESP32Stage": {\n      "managerName": "ESP32StageManager",\n      "managerProperties": {\n        "rs232device": "ESP32"\n      },\n      "axes": ["X", "Y", "Z"],\n      "forScanning": true,\n      "forPositioning": true\n    }\n  },\n  "lasers": {\n    "Laser405": {\n      "managerName": "ESP32LEDLaserManager",\n      "managerProperties": {\n        "rs232device": "ESP32",\n        "channel_index": 1\n      },\n      "wavelength": 405,\n      "valueRangeMin": 0,\n      "valueRangeMax": 100\n    },\n    "Laser488": {\n      "managerName": "ESP32LEDLaserManager",\n      "managerProperties": {\n        "rs232device": "ESP32",\n        "channel_index": 2\n      },\n      "wavelength": 488,\n      "valueRangeMin": 0,\n      "valueRangeMax": 100\n    },\n    "Laser561": {\n      "managerName": "ESP32LEDLaserManager",\n      "managerProperties": {\n        "rs232device": "ESP32",\n        "channel_index": 3\n      },\n      "wavelength": 561,\n      "valueRangeMin": 0,\n      "valueRangeMax": 100\n    }\n  },\n  "detectors": {\n    "WidefieldCamera": {\n      "managerName": "HikCamManager",\n      "managerProperties": {\n        "isRGB": 1,\n        "hikcam": {\n          "exposure": 100,\n          "gain": 0,\n          "blacklevel": 100\n        }\n      },\n      "forAcquisition": true,\n      "forFocusLock": true\n    }\n  },\n  "ledMatrixes": {\n    "ESP32 LEDMatrix": {\n      "managerName": "ESP32LEDMatrixManager",\n      "managerProperties": {\n        "rs232device": "ESP32",\n        "dimx": 8,\n        "dimy": 8\n      },\n      "wavelength": 635,\n      "valueRangeMin": 0,\n      "valueRangeMax": 255\n    }\n  },\n  "autofocus": {\n    "camera": "WidefieldCamera",\n    "positioner": "ESP32Stage",\n    "updateFreq": 10,\n    "frameCropx": 100,\n    "frameCropy": 100\n  }\n}\n')),(0,r.kt)("h2",{id:"device-managers"},"Device Managers"),(0,r.kt)("h3",{id:"camera-managers"},"Camera Managers"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"OpenCV Camera (USB/Built-in)"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'"WidefieldCamera": {\n  "managerName": "OpenCVCamManager",\n  "managerProperties": {\n    "cameraListIndex": 0,\n    "OpenCVCamera": {\n      "exposure": 0,\n      "gain": 0,\n      "fps": 30\n    }\n  }\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"HIK/Daheng Industrial Camera"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'"IndustrialCamera": {\n  "managerName": "HikCamManager",\n  "managerProperties": {\n    "isRGB": 1,\n    "hikcam": {\n      "exposure": 100,\n      "gain": 0,\n      "blacklevel": 100,\n      "gamma": 1.0\n    }\n  }\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Raspberry Pi Camera"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'"PiCamera": {\n  "managerName": "PiCamManager",\n  "managerProperties": {\n    "resolution": [1920, 1080],\n    "framerate": 30,\n    "sensor_mode": 0\n  }\n}\n')),(0,r.kt)("h3",{id:"stage-managers"},"Stage Managers"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"UC2-ESP32 Stage"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'"ESP32Stage": {\n  "managerName": "ESP32StageManager",\n  "managerProperties": {\n    "rs232device": "ESP32",\n    "stepsizeX": -0.3125,\n    "stepsizeY": -0.3125,\n    "stepsizeZ": 0.3125,\n    "homeSpeedX": 15000,\n    "homeSpeedY": 15000,\n    "homeSpeedZ": 15000,\n    "enabledAxes": ["X", "Y", "Z"]\n  },\n  "axes": ["X", "Y", "Z"],\n  "forScanning": true,\n  "forPositioning": true\n}\n')),(0,r.kt)("h3",{id:"laserled-managers"},"Laser/LED Managers"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"UC2-ESP32 LED Control"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'"LED_White": {\n  "managerName": "ESP32LEDLaserManager",\n  "managerProperties": {\n    "rs232device": "ESP32",\n    "channel_index": 1\n  },\n  "wavelength": 635,\n  "valueRangeMin": 0,\n  "valueRangeMax": 100\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"LED Matrix Control"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'"ESP32_LEDMatrix": {\n  "managerName": "ESP32LEDMatrixManager",\n  "managerProperties": {\n    "rs232device": "ESP32",\n    "dimx": 8,\n    "dimy": 8\n  },\n  "wavelength": 635,\n  "valueRangeMin": 0,\n  "valueRangeMax": 255\n}\n')),(0,r.kt)("h2",{id:"communication-settings"},"Communication Settings"),(0,r.kt)("h3",{id:"serialusb-communication"},"Serial/USB Communication"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'"ESP32": {\n  "managerName": "ESP32Manager",\n  "managerProperties": {\n    "serialport": "/dev/ttyUSB0",        # Linux\n    "serialport_windows": "COM3",        # Windows\n    "serialport_mac": "/dev/cu.usbserial-1410", # macOS\n    "baudrate": 115200,\n    "timeout": 1.0\n  }\n}\n')),(0,r.kt)("h3",{id:"wifinetwork-communication"},"WiFi/Network Communication"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'"ESP32_WiFi": {\n  "managerName": "ESP32Manager", \n  "managerProperties": {\n    "host_": "192.168.1.100",\n    "port": 31950,\n    "timeout": 5.0\n  }\n}\n')),(0,r.kt)("h2",{id:"configuration-templates"},"Configuration Templates"),(0,r.kt)("h3",{id:"1-basic-microscope"},"1. Basic Microscope"),(0,r.kt)("p",null,"Minimal setup for testing:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"USB camera"),(0,r.kt)("li",{parentName:"ul"},"Single LED"),(0,r.kt)("li",{parentName:"ul"},"Basic stage control")),(0,r.kt)("h3",{id:"2-multi-channel-fluorescence"},"2. Multi-Channel Fluorescence"),(0,r.kt)("p",null,"Advanced setup for fluorescence microscopy:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Industrial camera"),(0,r.kt)("li",{parentName:"ul"},"Multiple lasers (405nm, 488nm, 561nm)"),(0,r.kt)("li",{parentName:"ul"},"XYZ stage with autofocus"),(0,r.kt)("li",{parentName:"ul"},"LED matrix for structured illumination")),(0,r.kt)("h3",{id:"3-high-content-screening"},"3. High-Content Screening"),(0,r.kt)("p",null,"Setup for automated plate imaging:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"High-resolution camera"),(0,r.kt)("li",{parentName:"ul"},"Fast stage movement"),(0,r.kt)("li",{parentName:"ul"},"Multiple illumination options"),(0,r.kt)("li",{parentName:"ul"},"Automated well scanning")),(0,r.kt)("h3",{id:"4-custom-research-setup"},"4. Custom Research Setup"),(0,r.kt)("p",null,"Template for specialized applications:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Custom device managers"),(0,r.kt)("li",{parentName:"ul"},"Specialized hardware interfaces"),(0,r.kt)("li",{parentName:"ul"},"Research-specific workflows")),(0,r.kt)("h2",{id:"advanced-configuration"},"Advanced Configuration"),(0,r.kt)("h3",{id:"custom-device-managers"},"Custom Device Managers"),(0,r.kt)("p",null,"Creating custom device interfaces:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from imswitch.imcontrol.model.interfaces import DeviceManager\n\nclass CustomDeviceManager(DeviceManager):\n    def __init__(self, deviceInfo, name, **kwargs):\n        super().__init__(deviceInfo, name, **kwargs)\n        # Initialize custom hardware\n        \n    def custom_function(self):\n        # Implement custom functionality\n        pass\n")),(0,r.kt)("h3",{id:"widget-configuration"},"Widget Configuration"),(0,r.kt)("p",null,"Enable/disable UI components:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "availableWidgets": [\n    "Image",\n    "Laser",\n    "Positioner", \n    "Recording",\n    "Settings"\n  ],\n  "nonAvailableWidgets": [\n    "EtSTED",\n    "FocusLock",\n    "PixelCalibration"\n  ]\n}\n')),(0,r.kt)("h3",{id:"scripting-integration"},"Scripting Integration"),(0,r.kt)("p",null,"Configure script execution:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "scripting": {\n    "enabled": true,\n    "scriptPaths": ["./scripts", "/custom/scripts"],\n    "autoStart": ["startup_script.py"],\n    "allowedModules": ["numpy", "scipy", "opencv"]\n  }\n}\n')),(0,r.kt)("h2",{id:"validation-and-testing"},"Validation and Testing"),(0,r.kt)("h3",{id:"configuration-validation"},"Configuration Validation"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'# Validate configuration file\nimport json\n\ndef validate_config(config_file):\n    try:\n        with open(config_file, \'r\') as f:\n            config = json.load(f)\n        print("Configuration is valid JSON")\n        return True\n    except json.JSONDecodeError as e:\n        print(f"Invalid JSON: {e}")\n        return False\n\n# Test hardware connectivity\ndef test_hardware(config):\n    # Test each device defined in configuration\n    pass\n')),(0,r.kt)("h3",{id:"common-validation-errors"},"Common Validation Errors"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"JSON Syntax Errors"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Missing commas"),(0,r.kt)("li",{parentName:"ul"},"Unmatched brackets"),(0,r.kt)("li",{parentName:"ul"},"Invalid quotes")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Device Reference Errors"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Incorrect device names"),(0,r.kt)("li",{parentName:"ul"},"Missing manager properties"),(0,r.kt)("li",{parentName:"ul"},"Invalid parameter values")),(0,r.kt)("h2",{id:"best-practices"},"Best Practices"),(0,r.kt)("h3",{id:"organization"},"Organization"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Use descriptive names")," for devices and configurations"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Comment your configurations")," (JSON doesn't support comments, use separate documentation)"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Version control")," your configurations"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Test incrementally")," when building complex setups")),(0,r.kt)("h3",{id:"performance"},"Performance"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Optimize camera settings")," for your application"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Configure appropriate timeouts")," for network devices"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Use hardware triggering")," when available"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Minimize unnecessary polling")," of slow devices")),(0,r.kt)("h3",{id:"maintenance"},"Maintenance"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Regular backups")," of working configurations"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Document custom settings")," and their purposes"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Test after updates")," to ensure compatibility"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Keep templates")," for common setups")),(0,r.kt)("h2",{id:"next-steps"},"Next Steps"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"./Hardware.md"},"Hardware Setup Guide"))," - Physical hardware configuration"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"./Calibration.md"},"Calibration Procedures"))," - System calibration and alignment"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"./Troubleshooting.md"},"Troubleshooting"))," - Common configuration issues")),(0,r.kt)("h2",{id:"related-resources"},"Related Resources"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"/docs/ImSwitch/Advanced/Usage/UC2-REST"},"UC2-REST Documentation"))," - Communication layer details"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"https://imswitch.readthedocs.io/"},"ImSwitch API Reference"))," - Complete API documentation"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"https://github.com/openUC2/ImSwitchConfig"},"Example Configurations"))," - Community configurations")))}m.isMDXComponent=!0}}]);