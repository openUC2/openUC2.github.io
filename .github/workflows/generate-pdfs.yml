      - name: Prepare release variables
        id: relvars
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "tag=${{ inputs.tag }}" >> $GITHUB_OUTPUT
            TITLE="${{ inputs.release_name != '' && inputs.release_name || inputs.tag }}"
            BODY='${{ inputs.body }}'
            if [ -z "$BODY" ]; then BODY=""; fi
            echo "title=$TITLE" >> $GITHUB_OUTPUT
            echo "body<<EOF" >> $GITHUB_OUTPUT
            echo "$BODY" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
            echo "prerelease=${{ inputs.prerelease && 'true' || 'false' }}" >> $GITHUB_OUTPUT
          else
            echo "tag=${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT
            echo "title=${{ github.event.release.name }}" >> $GITHUB_OUTPUT
            echo "body<<EOF" >> $GITHUB_OUTPUT
            echo "${{ github.event.release.body }}" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
            echo "prerelease=${{ github.event.release.prerelease && 'true' || 'false' }}" >> $GITHUB_OUTPUT
          fi

      - name: Create/update release and upload PDFs
        if: hashFiles('pdf-artifacts/**/*.pdf') != ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          # create or update release
          if gh release view "${{ steps.relvars.outputs.tag }}" >/dev/null 2>&1; then
            gh release edit "${{ steps.relvars.outputs.tag }}" \
              --title "${{ steps.relvars.outputs.title }}" \
              --notes "${{ steps.relvars.outputs.body }}" \
              $([ "${{ steps.relvars.outputs.prerelease }}" = "true" ] && echo "--prerelease" || echo "--draft=false")
          else
            gh release create "${{ steps.relvars.outputs.tag }}" \
              --title "${{ steps.relvars.outputs.title }}" \
              --notes "${{ steps.relvars.outputs.body }}" \
              $([ "${{ steps.relvars.outputs.prerelease }}" = "true" ] && echo "--prerelease")
          fi

          # upload assets (retry to avoid transient failures)
          for f in $(find pdf-artifacts -type f -name '*.pdf'); do
            echo "Uploading $f"
            for i in 1 2 3; do
              if gh release upload "${{ steps.relvars.outputs.tag }}" "$f" --clobber; then
                break
              fi
              echo "Retry $i for $f ..."
              sleep 2
            done
          done
