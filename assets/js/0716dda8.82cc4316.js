"use strict";(self.webpackChunkuc_2_docs=self.webpackChunkuc_2_docs||[]).push([[8140],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>d});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(a),d=r,k=u["".concat(s,".").concat(d)]||u[d]||m[d]||i;return a?n.createElement(k,o(o({ref:t},c),{},{components:a})):n.createElement(k,o({ref:t},c))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},37290:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const i={},o="ImSwitch OS (based on Forklift)",l={unversionedId:"ImSwitch/Advanced/Installation/ForkLift",id:"ImSwitch/Advanced/Installation/ForkLift",title:"ImSwitch OS (based on Forklift)",description:"The ImSwitch ImSwitch OS is a complete, pre-configured operating system image designed specifically for UC2 microscopy systems. It provides a ready-to-use environment with all software, drivers, and configurations pre-installed.",source:"@site/docs/05_ImSwitch/Advanced/01_Installation/ForkLift.md",sourceDirName:"05_ImSwitch/Advanced/01_Installation",slug:"/ImSwitch/Advanced/Installation/ForkLift",permalink:"/docs/ImSwitch/Advanced/Installation/ForkLift",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ImSwitch Docker Installation",permalink:"/docs/ImSwitch/Advanced/Installation/Docker"},next:{title:"ImSwitch Installer",permalink:"/docs/ImSwitch/Advanced/Installation/Installer"}},s={},p=[{value:"Images and Screenshots",id:"images-and-screenshots",level:2},{value:"Overview",id:"overview",level:2},{value:"Features",id:"features",level:2},{value:"Pre-Installed Software",id:"pre-installed-software",level:3},{value:"Hardware Support",id:"hardware-support",level:3},{value:"Network Features",id:"network-features",level:3},{value:"Installation",id:"installation",level:2},{value:"Requirements",id:"requirements",level:3},{value:"Step 1: Download Image",id:"step-1-download-image",level:3},{value:"Step 2: Flash to SD Card",id:"step-2-flash-to-sd-card",level:3},{value:"Step 3: First Boot",id:"step-3-first-boot",level:3},{value:"Configuration",id:"configuration",level:2},{value:"Initial Setup",id:"initial-setup",level:3},{value:"Network Configuration",id:"network-configuration",level:3},{value:"ImSwitch Configuration",id:"imswitch-configuration",level:3},{value:"Usage",id:"usage",level:2},{value:"Web Interface",id:"web-interface",level:3},{value:"Web Interfaces",id:"web-interfaces",level:3},{value:"System Management",id:"system-management",level:3},{value:"Advanced Features",id:"advanced-features",level:2},{value:"Custom Configurations",id:"custom-configurations",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Docker Compose Services",id:"docker-compose-services",level:3},{value:"Log Files",id:"log-files",level:3},{value:"Recovery",id:"recovery",level:3},{value:"Updates and Maintenance",id:"updates-and-maintenance",level:2},{value:"Manual Updates",id:"manual-updates",level:3},{value:"Update Components",id:"update-components",level:3},{value:"Support and Resources",id:"support-and-resources",level:2},{value:"Getting Help",id:"getting-help",level:3},{value:"Related Projects",id:"related-projects",level:3},{value:"Next Steps",id:"next-steps",level:2}],c={toc:p};function m(e){let{components:t,...i}=e;return(0,r.kt)("wrapper",(0,n.Z)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"imswitch-os-based-on-forklift"},"ImSwitch OS (based on Forklift)"),(0,r.kt)("p",null,"The ImSwitch ImSwitch OS is a complete, pre-configured operating system image designed specifically for UC2 microscopy systems. It provides a ready-to-use environment with all software, drivers, and configurations pre-installed."),(0,r.kt)("h2",{id:"images-and-screenshots"},"Images and Screenshots"),(0,r.kt)("p",null,"The ImSwitch OS comes with a visual installer and desktop environment:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"ImSwitch OS Desktop",src:a(80075).Z,width:"3110",height:"2072"}),"\n",(0,r.kt)("em",{parentName:"p"},"ImSwitch OS desktop environment with pre-installed applications")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"ImSwitch Configuration",src:a(80585).Z,width:"2268",height:"1476"}),"\n",(0,r.kt)("em",{parentName:"p"},"ImSwitch configuration interface for hardware setup")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"ImSwitch Docker Interface",src:a(92530).Z,width:"3110",height:"2072"}),"\n",(0,r.kt)("em",{parentName:"p"},"Docker containers running ImSwitch services")),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"The ImSwitch OS is a specialized Raspberry Pi OS image that includes:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"ImSwitch")," with all dependencies pre-installed"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"UC2-REST")," Python interface for ESP32 communication"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"UC2-ESP32 firmware")," flashing tools"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Docker")," with pre-built ImSwitch containers"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Camera drivers")," for supported hardware"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Configuration templates")," for common setups"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Web interface")," for remote control")),(0,r.kt)("h2",{id:"features"},"Features"),(0,r.kt)("h3",{id:"pre-installed-software"},"Pre-Installed Software"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"ImSwitch Core"),": Latest stable version with all modules"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Docker Environment"),": Pre-built containers ready to run"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"UC2-REST Library"),": Python interface for hardware control"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Firmware Tools"),": ESP32 flashing utilities and firmware"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Development Tools"),": Python, Git, VS Code Server (optional)")),(0,r.kt)("h3",{id:"hardware-support"},"Hardware Support"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Cameras"),": HIK, Daheng, Raspberry Pi, USB cameras"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Motors"),": UC2-ESP32 controlled stages and focus systems"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Illumination"),": LED arrays, lasers, matrix displays"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Sensors"),": Environmental monitoring, feedback systems")),(0,r.kt)("h3",{id:"network-features"},"Network Features"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"WiFi Hotspot"),": Create isolated network for microscope control"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Web Interface"),": Browser-based control panel (Cockpit)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"SSH Access"),": Remote terminal access"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"VNC Server"),": Remote desktop access")),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("h3",{id:"requirements"},"Requirements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Raspberry Pi 4")," (4GB RAM minimum, 8GB recommended)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"MicroSD Card")," (32GB minimum, Class 10 or better)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"UC2 Hardware")," (optional for initial setup)")),(0,r.kt)("h3",{id:"step-1-download-image"},"Step 1: Download Image"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Download the latest Forklift OS image or go to Zenodo and download it here https://zenodo.org/records/14988987\nwget https://zenodo.org/records/14988987/files/rpi-uc2-27f9a21.zip?download=1\n")),(0,r.kt)("h3",{id:"step-2-flash-to-sd-card"},"Step 2: Flash to SD Card"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Using Raspberry Pi Imager (Recommended):")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Download ",(0,r.kt)("a",{parentName:"li",href:"https://www.raspberrypi.org/software/"},"Raspberry Pi Imager")),(0,r.kt)("li",{parentName:"ol"},'Select "Use custom image" and choose the downloaded .img.xz file'),(0,r.kt)("li",{parentName:"ol"},"Select your SD card"),(0,r.kt)("li",{parentName:"ol"},'Click "Write" and wait for completion')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Using dd (Linux/macOS):")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Extract image\nxz -d imswitch-forklift-os.img.xz\n\n# Flash to SD card (replace /dev/sdX with your SD card device)\nsudo dd if=imswitch-forklift-os.img of=/dev/sdX bs=4M status=progress\nsync\n")),(0,r.kt)("h3",{id:"step-3-first-boot"},"Step 3: First Boot"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Insert SD card into Raspberry Pi"),(0,r.kt)("li",{parentName:"ol"},"Power on the Raspberry Pi"),(0,r.kt)("li",{parentName:"ol"},"Observe for an SSID with name ",(0,r.kt)("inlineCode",{parentName:"li"},"openuc2-XXX-XXX-XXX"))),(0,r.kt)("h2",{id:"configuration"},"Configuration"),(0,r.kt)("h3",{id:"initial-setup"},"Initial Setup"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Access Methods:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"SSH"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ssh pi@openuc2-xxxx-xxxx-xxx.local")," (default password: ",(0,r.kt)("inlineCode",{parentName:"li"},"youseetoo"),", default login: ",(0,r.kt)("inlineCode",{parentName:"li"},"pi")," )"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Web Interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"http://imswitch-pi.local:8001"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Default Credentials:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Username: ",(0,r.kt)("inlineCode",{parentName:"li"},"pi")),(0,r.kt)("li",{parentName:"ul"},"Password: ",(0,r.kt)("inlineCode",{parentName:"li"},"youseetoo")),(0,r.kt)("li",{parentName:"ul"},"SSH: Enabled by default")),(0,r.kt)("h3",{id:"network-configuration"},"Network Configuration"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"WiFi Hotspot Mode:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Enable hotspot mode (creates isolated network)\nsudo systemctl enable hostapd\nsudo systemctl enable dnsmasq\n\n# Configure hotspot settings\nsudo nano /etc/hostapd/hostapd.conf\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Client Mode (Connect to existing WiFi):")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Use the desktop WiFi settings or command line\nsudo raspi-config\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"FireWall Settings*:")),(0,r.kt)("p",null,"If you haven't explicitly configured the firewall to allow traffic into a dedicated port (e.g. 8005) from the outside world you have to explicitly open it by doing:"),(0,r.kt)("p",null,"ImSwitch runs on 8001 (REST),  8002 (SOCKET) per default:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"sudo firewall-cmd --zone=public --add-port=8001/tcp; sudo firewall-cmd --zone=nm-shared --add-port=8001/tcp\nsudo firewall-cmd --zone=public --add-port=8002/tcp; sudo firewall-cmd --zone=nm-shared --add-port=8002/tcp\n")),(0,r.kt)("p",null,"in an SSH session on the RPi. Then you can test this is by doing ",(0,r.kt)("inlineCode",{parentName:"p"},"curl localhost:8005")," (e.g. if you run a python server as ",(0,r.kt)("inlineCode",{parentName:"p"},"python -m http.server 8005"),"). If you get valid HTML, then it's extremely likely that the firewall is blocking external access to port 8005."),(0,r.kt)("h3",{id:"imswitch-configuration"},"ImSwitch Configuration"),(0,r.kt)("p",null,"For detailed information about ImSwitch configuration files, see the ",(0,r.kt)("a",{parentName:"p",href:"/docs/ImSwitch/Advanced/Configuration/"},"Configuration Guide"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Quick Start Configuration:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Navigate to configuration directory\ncd /home/pi/ImSwitchConfig\n\n# Copy a template configuration\nConfiguration files are stored in `/home/pi/Documents/ImSwitchConfig/config/` and can be edited using the desktop interface or via SSH.\n\n# Edit configuration for your hardware\nnano config/imcontrol_options.json #=> enter the name you want to use\n")),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("h3",{id:"web-interface"},"Web Interface"),(0,r.kt)("p",null,"The Forklift OS includes a web-based control interface accessible at:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Local"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"http://localhost:8001")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Network"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"http://opencu2-XXX-xxx-xxx.local:8001"))),(0,r.kt)("h3",{id:"web-interfaces"},"Web Interfaces"),(0,r.kt)("p",null,"The ImSwitch OS provides several web interfaces for remote access:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Cockpit Web Console"),": Available at ",(0,r.kt)("inlineCode",{parentName:"li"},"http://[raspberry-pi-ip]:9090")," for system administration"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"ImSwitch React Interface"),": Available at ",(0,r.kt)("inlineCode",{parentName:"li"},"http://[raspberry-pi-ip]:8001/imswitch/index.html")," for microscope control  "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"WebSocket Control"),": Available at ",(0,r.kt)("inlineCode",{parentName:"li"},"http://[raspberry-pi-ip]:8002")," for real-time data streams\nactually it's https by default to connect to it via a statically hosted website e.g. ",(0,r.kt)("a",{parentName:"li",href:"https://youseetoo.github.io/imswitch/index.html"},"https://youseetoo.github.io/imswitch/index.html"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Features:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Live camera feed"),(0,r.kt)("li",{parentName:"ul"},"Motor control"),(0,r.kt)("li",{parentName:"ul"},"LED/laser control"),(0,r.kt)("li",{parentName:"ul"},"Configuration management"),(0,r.kt)("li",{parentName:"ul"},"System monitoring")),(0,r.kt)("h3",{id:"system-management"},"System Management"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Update ImSwitch:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"forklift pallet upgrade --force @main\n")),(0,r.kt)("h2",{id:"advanced-features"},"Advanced Features"),(0,r.kt)("h3",{id:"custom-configurations"},"Custom Configurations"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Hardware Configuration:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'# Edit hardware configuration\nnano /home/pi/ImSwitchConfig/imcontrol_setups/my_setup.json\n\n# Set as active configuration\necho \'{"setupFileName": "my_setup.json"}\' > /home/pi/ImSwitchConfig/config/imcontrol_options.json\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Scripting:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Custom scripts directory\nls /home/pi/ImSwitchConfig/scripts/\n\n# Add your custom scripts\ncp my_script.py /home/pi/ImSwitchConfig/scripts/\n")),(0,r.kt)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,r.kt)("h3",{id:"common-issues"},"Common Issues"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Check docker compose is running:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"docker ps\n")),(0,r.kt)("h3",{id:"docker-compose-services"},"Docker Compose Services"),(0,r.kt)("p",null,"The ImSwitch OS includes a pre-configured docker-compose setup with the following services:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'version: \'3.8\'\nservices:\n  imswitch:\n    image: ghcr.io/openuc2/imswitch-noqt-x64:latest\n    ports:\n      - "8001:8001"\n      - "2222:22"\n    environment:\n      - HEADLESS=1\n      - HTTP_PORT=8001\n      - CONFIG_FILE=example_uc2_hik_flowstop.json\n      - UPDATE_GIT=0\n      - UPDATE_CONFIG=0\n    volumes:\n      - /home/pi/Documents/ImSwitchConfig:/config\n      - /home/pi/Documents/ImSwitchData:/data\n    privileged: true\n    restart: unless-stopped\n\n  portainer:\n    image: portainer/portainer-ce:latest\n    ports:\n      - "9000:9000"\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock\n      - portainer_data:/data\n    restart: unless-stopped\n\nvolumes:\n  portainer_data:\n')),(0,r.kt)("p",null,"This setup provides:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"ImSwitch"),": Main microscopy control application"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Portainer"),": Docker container management interface"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Persistent Data"),": Configuration and data volumes for data retention")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Hardware not detected:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Check USB devices\nlsusb\n\n# Check serial ports\nls /dev/tty*\n\n# Check permissions\nsudo usermod -a -G dialout pi\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Network issues:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Check network status\nip addr show\n\n# Restart network services\nsudo systemctl restart dhcpcd\nsudo systemctl restart hostapd\n")),(0,r.kt)("h3",{id:"log-files"},"Log Files"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Important log locations:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"ImSwitch"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"/home/pi/.imswitch/logs/")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"System"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"/var/log/syslog")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Docker"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"journalctl -u imswitch-docker"))),(0,r.kt)("h3",{id:"recovery"},"Recovery"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Reset to defaults:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Reset ImSwitch configuration\nrm -rf /home/pi/ImSwitchConfig/config/*\n# then restart imswitch\n")),(0,r.kt)("h2",{id:"updates-and-maintenance"},"Updates and Maintenance"),(0,r.kt)("h3",{id:"manual-updates"},"Manual Updates"),(0,r.kt)("p",null,"For manual updates, use the provided update script:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Update ImSwitch Docker containers\nbash ~/Desktop/update_docker_container.sh\n\n# Or manually pull latest images\nsudo docker-compose down\nsudo docker pull ghcr.io/openuc2/imswitch-noqt-x64:latest\nsudo docker-compose up -d\n")),(0,r.kt)("h3",{id:"update-components"},"Update Components"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Update ImSwitch configuration files\ncd /home/pi/Documents/ImSwitchConfig\ngit pull origin master\n\n# Update UC2-REST library\npip install --upgrade UC2-REST\n\n# Update ESP32 firmware tools\ncd /home/pi/uc2-esp32\ngit pull origin main\n")),(0,r.kt)("h2",{id:"support-and-resources"},"Support and Resources"),(0,r.kt)("h3",{id:"getting-help"},"Getting Help"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Documentation"),": This guide and linked resources"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"GitHub Issues"),": ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/openUC2/imswitch-os/issues"},"ImSwitch OS Repository")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Community Forum"),": ",(0,r.kt)("a",{parentName:"li",href:"https://openuc2.com"},"openUC2.com")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Email Support"),": Contact via GitHub or forum")),(0,r.kt)("h3",{id:"related-projects"},"Related Projects"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"ImSwitch Core"),": ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/openUC2/ImSwitch"},"ImSwitch Repository")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"UC2-REST"),": ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/openUC2/UC2-REST"},"UC2-REST Repository")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"UC2-ESP32"),": ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/youseetoo/uc2-esp32"},"UC2-ESP32 Firmware"))),(0,r.kt)("h2",{id:"next-steps"},"Next Steps"),(0,r.kt)("p",null,"After setting up Forklift OS:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"/docs/ImSwitch/Advanced/Configuration/"},"Configure your hardware"))," - Set up specific devices"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"/docs/ImSwitch/Advanced/Usage/"},"Basic usage tutorial"))," - Learn ImSwitch operation"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"/docs/ImSwitch/Advanced/Tutorials/"},"Advanced tutorials"))," - Explore advanced features")))}m.isMDXComponent=!0},80075:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/ImSwitch-OS-1-609cd3cb00b66ba5fc6128fc01441ba8.png"},80585:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/ImSwitch-OS-2-2d625346928a431196e546367847b229.png"},92530:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/ImSwitch-OS-3-4393a4a902c442243db0f88a64390d38.png"}}]);