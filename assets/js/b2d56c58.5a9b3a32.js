"use strict";(self.webpackChunkuc_2_docs=self.webpackChunkuc_2_docs||[]).push([[8722],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=s(n),m=o,f=u["".concat(l,".").concat(m)]||u[m]||d[m]||i;return n?r.createElement(f,a(a({ref:t},p),{},{components:n})):r.createElement(f,a({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var s=2;s<i;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},44023:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>c,toc:()=>s});var r=n(87462),o=(n(67294),n(3905));const i={id:"uc2e5",title:"REST principle"},a=void 0,c={unversionedId:"Electronics/Advanced/UC2-REST/uc2e5",id:"Electronics/Advanced/UC2-REST/uc2e5",title:"REST principle",description:"Introduction into the ESP32 microcontroller firmware",source:"@site/docs/04_Electronics/10_Advanced/UC2-REST/04_Intro_to_ESP32.md",sourceDirName:"04_Electronics/10_Advanced/UC2-REST",slug:"/Electronics/Advanced/UC2-REST/uc2e5",permalink:"/docs/Electronics/Advanced/UC2-REST/uc2e5",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{id:"uc2e5",title:"REST principle"},sidebar:"tutorialSidebar",previous:{title:"TMC",permalink:"/docs/Electronics/Advanced/UC2-ESP/APIDescription/TMC"},next:{title:"REST commands",permalink:"/docs/Electronics/Advanced/UC2-REST/uc2e5.1"}},l={},s=[{value:"Introduction into the ESP32 microcontroller firmware",id:"introduction-into-the-esp32-microcontroller-firmware",level:2}],p={toc:s};function d(e){let{components:t,...i}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"introduction-into-the-esp32-microcontroller-firmware"},"Introduction into the ESP32 microcontroller firmware"),(0,o.kt)("p",null,"Duration:5"),(0,o.kt)("p",null,'The firmware that runs on the ESP32 is under constant development and subject to heavy changes! However, the core idea will remain the same and is inspired by the\n"REST-API", which deals with "endpoints" in the HTML world (e.g. "',(0,o.kt)("inlineCode",{parentName:"p"},"/home"),'"). We implemented the follow functions:'),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"/*_act"),"-> this starts an action"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"/*_get"),"-> this will return parameters or states"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"/*_set"),"-> this will set parameters or states")),(0,o.kt)("p",null,"The functions will work on different actuators and sensors e.g. motors, lasers, leds and so on."),(0,o.kt)("p",null,"The API is callable through USB Serial and/or Wifi. The ESP32 can connect to a nearby Wifi Hotspot or even create its own access point (AP). Additional documentation for this will follow soon."),(0,o.kt)("p",null,(0,o.kt)("img",{src:n(1563).Z,width:"786",height:"1122"})),(0,o.kt)("p",null,"In general, to interact with a device (e.g. stage), one has to send a JSON document, which is similar to the REST-API in the Internet world. A simple example to rotate a motor would be:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'{\n  "task": "/motor_act",\n  "axis":1,\n  "speed":1000,\n  "position":1000,\n  "isabsolute":1,\n  "isblocking":1\n}\n')))}d.isMDXComponent=!0},1563:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/UC2eREST-30d86edf6b63f250cd51289d56b3c2ef.png"}}]);