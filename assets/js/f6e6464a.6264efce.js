"use strict";(self.webpackChunkuc_2_docs=self.webpackChunkuc_2_docs||[]).push([[5857],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>u});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=p(a),u=r,k=d["".concat(s,".").concat(u)]||d[u]||m[u]||i;return a?n.createElement(k,l(l({ref:t},c),{},{components:a})):n.createElement(k,l({ref:t},c))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=a[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},7355:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const i={},l="ImSwitch Docker Installation",o={unversionedId:"ImSwitch/Advanced/Installation/Docker",id:"ImSwitch/Advanced/Installation/Docker",title:"ImSwitch Docker Installation",description:"Docker installation is the recommended method for most users as it provides a complete, pre-configured environment with all dependencies included.",source:"@site/docs/05_ImSwitch/Advanced/01_Installation/Docker.md",sourceDirName:"05_ImSwitch/Advanced/01_Installation",slug:"/ImSwitch/Advanced/Installation/Docker",permalink:"/docs/ImSwitch/Advanced/Installation/Docker",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ImSwitch Installation Tutorials",permalink:"/docs/ImSwitch/Advanced/Installation/"},next:{title:"ImSwitch OS (based on Forklift)",permalink:"/docs/ImSwitch/Advanced/Installation/ForkLift"}},s={},p=[{value:"Overview",id:"overview",level:2},{value:"Architecture Diagram",id:"architecture-diagram",level:3},{value:"ImSwitch Docker Features",id:"imswitch-docker-features",level:3},{value:"Quick Start",id:"quick-start",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"One-Step Installation (Raspberry Pi/Debian)",id:"one-step-installation-raspberry-pidebian",level:3},{value:"Manual Installation",id:"manual-installation",level:3},{value:"Step 1: Pull the Docker Image",id:"step-1-pull-the-docker-image",level:4},{value:"Step 2: Run ImSwitch Container",id:"step-2-run-imswitch-container",level:4},{value:"Environment Variables",id:"environment-variables",level:2},{value:"Volume Mounts",id:"volume-mounts",level:2},{value:"Access Methods",id:"access-methods",level:2},{value:"Web Interface",id:"web-interface",level:3},{value:"SSH Access",id:"ssh-access",level:3},{value:"Features",id:"features",level:2},{value:"Core Capabilities",id:"core-capabilities",level:3},{value:"Hardware Support",id:"hardware-support",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Container Logs",id:"container-logs",level:3},{value:"Advanced Configuration",id:"advanced-configuration",level:2},{value:"Custom Configuration Files",id:"custom-configuration-files",level:3},{value:"Development Mode",id:"development-mode",level:3},{value:"Next Steps",id:"next-steps",level:2},{value:"Related Links",id:"related-links",level:2}],c={toc:p};function m(e){let{components:t,...i}=e;return(0,r.kt)("wrapper",(0,n.Z)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"imswitch-docker-installation"},"ImSwitch Docker Installation"),(0,r.kt)("p",null,"Docker installation is the recommended method for most users as it provides a complete, pre-configured environment with all dependencies included."),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"ImSwitch is deployed as a Python application inside a Docker container with:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Ubuntu base image")," with all required libraries and dependencies"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"UC2-REST library")," for ESP32 control and hardware communication"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"FastAPI REST API server")," for remote control and automation"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"React web interface")," for browser-based microscopy control"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Napari integration")," for advanced image processing and analysis"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Pre-installed camera drivers")," for supported hardware (HIK, Daheng, USB cameras)")),(0,r.kt)("h3",{id:"architecture-diagram"},"Architecture Diagram"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"ImSwitch Docker Architecture",src:a(2829).Z,width:"5550",height:"3350"})),(0,r.kt)("p",null,"The system architecture includes:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Central component"),": Python-based microscopy software ",(0,r.kt)("em",{parentName:"li"},"ImSwitch")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Function"),": Connects hardware elements, device drivers, and controllers"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Application"),": Enables time-lapse recordings and complex scanning patterns"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Abstraction"),": Software acts as an independent server with generic interfaces"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Docker integration"),": ImSwitch packaged as a container with cloud-based compilation"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Easy updates"),": Automated script downloads and integrates changes"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Hardware workflow"),": Hardware integrated via JSON configuration files"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"USB integration"),": Direct device interaction with Docker container"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Cross-platform"),": Runs on Raspberry Pi, desktop computers, and cloud systems"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Web-based interface"),": Browser access to REST API and control interface"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Image processing"),": Integration with ",(0,r.kt)("em",{parentName:"li"},"Napari")," and open-source image processing tools")),(0,r.kt)("h3",{id:"imswitch-docker-features"},"ImSwitch Docker Features"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"What you can expect:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Headless Operation"),": NO-QT (no PyQt/Qt dependency) version for server deployments"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Web Access"),": Application exposed on port 8001 with browser-based control"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"API Documentation"),": Swagger GUI available at ",(0,r.kt)("inlineCode",{parentName:"li"},"https://localhost:8001/docs")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"React Interface"),": Full-featured web app at ",(0,r.kt)("inlineCode",{parentName:"li"},"https://localhost:8001/imswitch/index.html")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Configurable Setup"),": Customize behavior using environment variables"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Camera Support"),": Pre-built drivers for HIK cameras (tested on ARM devices)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Multi-Architecture"),": Support for ARM64 and X86 systems")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Screenshots:")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Swagger UI Interface",src:a(50526).Z,width:"2862",height:"1802"}),"\n",(0,r.kt)("em",{parentName:"p"},"Swagger UI Interface of the ImSwitch Server")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"React Web App",src:a(45575).Z,width:"2862",height:"1802"}),"\n",(0,r.kt)("em",{parentName:"p"},"The React APP hosted via FastAPI endpoint (",(0,r.kt)("strong",{parentName:"em"},"ENSURE YOU HAVE ACCEPTED THE CERTIFICATE"),")")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"CI/CD Pipeline",src:a(54113).Z,width:"2808",height:"644"}),"\n",(0,r.kt)("em",{parentName:"p"},"Images built using CI with ",(0,r.kt)("a",{parentName:"em",href:"https://github.com/openUC2/ImSwitch/blob/master/.github/workflows/imswitch-docker-multiarch-noqt.yaml"},"GitHub Actions"))),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Container Registry",src:a(35636).Z,width:"2462",height:"644"}),"\n",(0,r.kt)("em",{parentName:"p"},"Docker Images hosted on ",(0,r.kt)("a",{parentName:"em",href:"https://github.com/orgs/openUC2/packages?repo_name=ImSwitch"},"GitHub Container Registry"))),(0,r.kt)("h2",{id:"quick-start"},"Quick Start"),(0,r.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Docker installed on your system"),(0,r.kt)("li",{parentName:"ul"},"At least 4GB RAM and 10GB free disk space")),(0,r.kt)("h3",{id:"one-step-installation-raspberry-pidebian"},"One-Step Installation (Raspberry Pi/Debian)"),(0,r.kt)("p",null,"For Debian-based systems including Raspberry Pi, use the automated installation script that installs Docker, camera drivers, and pulls the ImSwitch container:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Download and run the one-step installer\nwget https://raw.githubusercontent.com/openUC2/ImSwitchDockerInstall/master/install_all.sh\nchmod +x install_all.sh\nsudo ./install_all.sh\n")),(0,r.kt)("p",null,"This installer provides:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Docker installation")," and configuration"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Camera drivers")," for HIK, Daheng, and USB cameras  "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"ImSwitch container")," download and setup"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"System configuration")," for optimal performance"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Automatic startup")," configuration")),(0,r.kt)("p",null,"Repository: ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/openUC2/ImSwitchDockerInstall"},"openUC2/ImSwitchDockerInstall")),(0,r.kt)("h3",{id:"manual-installation"},"Manual Installation"),(0,r.kt)("h4",{id:"step-1-pull-the-docker-image"},"Step 1: Pull the Docker Image"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# For ARM64 and X86 systems\nsudo docker pull ghcr.io/openuc2/imswitch-noqt-amd64:latest\n")),(0,r.kt)("h4",{id:"step-2-run-imswitch-container"},"Step 2: Run ImSwitch Container"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Basic setup:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo docker run -it --rm -p 8001:8001 -p 2222:22 \\\n  -e HEADLESS=1 \\\n  -e HTTP_PORT=8001 \\\n  -e CONFIG_FILE=example_uc2_hik_flowstop.json \\\n  --privileged \\\n  ghcr.io/openuc2/imswitch-noqt-amd64:latest\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Advanced setup with persistent data:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'sudo docker run -it --rm -p 8001:8001 -p 2222:22 \\\n  -e UPDATE_INSTALL_GIT=1 \\\n  -e PIP_PACKAGES="arkitekt UC2-REST" \\\n  -e DATA_PATH=/dataset \\\n  -e CONFIG_PATH=/config \\\n  -v ~/Documents/imswitch_docker/imswitch_git:/tmp/ImSwitch-changes \\\n  -v ~/Documents/imswitch_docker/imswitch_pip:/persistent_pip_packages \\\n  -v ~/Downloads:/config \\\n  --privileged \\\n  ghcr.io/openuc2/imswitch-noqt-x64:latest\n')),(0,r.kt)("h2",{id:"environment-variables"},"Environment Variables"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Variable"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"HEADLESS")),(0,r.kt)("td",{parentName:"tr",align:null},"Run without GUI"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"1"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"HTTP_PORT")),(0,r.kt)("td",{parentName:"tr",align:null},"Web interface port"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"8001"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"CONFIG_FILE")),(0,r.kt)("td",{parentName:"tr",align:null},"ImSwitch configuration file"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"example_uc2_hik_flowstop.json"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"UPDATE_INSTALL_GIT")),(0,r.kt)("td",{parentName:"tr",align:null},"Update ImSwitch from Git"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"0"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"UPDATE_GIT")),(0,r.kt)("td",{parentName:"tr",align:null},"Update repositories"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"0"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"UPDATE_CONFIG")),(0,r.kt)("td",{parentName:"tr",align:null},"Update configuration"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"0"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"PIP_PACKAGES")),(0,r.kt)("td",{parentName:"tr",align:null},"Additional packages to install"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'""'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"DATA_PATH")),(0,r.kt)("td",{parentName:"tr",align:null},"Data storage path"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"/dataset"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"CONFIG_PATH")),(0,r.kt)("td",{parentName:"tr",align:null},"Configuration path"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"/config"))))),(0,r.kt)("h2",{id:"volume-mounts"},"Volume Mounts"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Host Path"),(0,r.kt)("th",{parentName:"tr",align:null},"Container Path"),(0,r.kt)("th",{parentName:"tr",align:null},"Purpose"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"~/Documents/imswitch_docker/imswitch_git")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"/tmp/ImSwitch-changes")),(0,r.kt)("td",{parentName:"tr",align:null},"Persist ImSwitch repository changes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"~/Documents/imswitch_docker/imswitch_pip")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"/persistent_pip_packages")),(0,r.kt)("td",{parentName:"tr",align:null},"Persist installed pip packages")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"~/Downloads")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"/config")),(0,r.kt)("td",{parentName:"tr",align:null},"Configuration files")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"~/Data")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"/dataset")),(0,r.kt)("td",{parentName:"tr",align:null},"Data storage")))),(0,r.kt)("h2",{id:"access-methods"},"Access Methods"),(0,r.kt)("h3",{id:"web-interface"},"Web Interface"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"React App"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"http://localhost:8001/imswitch/index.html")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"REST API"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"http://localhost:8001/docs")," (Swagger UI)")),(0,r.kt)("h3",{id:"ssh-access"},"SSH Access"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Port"),": 2222"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Default credentials"),": Check container documentation")),(0,r.kt)("h2",{id:"features"},"Features"),(0,r.kt)("h3",{id:"core-capabilities"},"Core Capabilities"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"No-Qt Installation"),": Headless operation without PyQt dependencies"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Cross-Platform"),": Runs on Windows, macOS, Linux, Raspberry Pi"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Hardware Integration"),": USB device support with ",(0,r.kt)("inlineCode",{parentName:"li"},"--privileged")," flag"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Real-time Control"),": FastAPI-based REST API for remote control"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Image Processing"),": Integrated Napari for advanced image analysis")),(0,r.kt)("h3",{id:"hardware-support"},"Hardware Support"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Cameras"),": HIK, Daheng, OpenCV, Raspberry Pi cameras"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Motors"),": UC2-ESP32 controlled stages and focus systems"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Illumination"),": LED arrays, lasers via UC2-ESP32"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"USB Devices"),": Full USB support with proper container configuration")),(0,r.kt)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,r.kt)("h3",{id:"common-issues"},"Common Issues"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Container won't start:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Check Docker is running\nsudo systemctl status docker\n\n# Check available ports\nsudo netstat -tlnp | grep 8001\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Camera not detected:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Run with device access\nsudo docker run --device=/dev/video0 [other options]\n\n# Or use privileged mode (recommended)\nsudo docker run --privileged [other options]\n\n# check if camera is actually connected \nlsusb\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Permission denied errors:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Add user to docker group\nsudo usermod -aG docker $USER\n# Logout and login again\n")),(0,r.kt)("h3",{id:"container-logs"},"Container Logs"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# View container logs (retreive container id with docker ps)\nsudo docker logs [container_id]\n\n# Follow logs in real-time\nsudo docker logs -f [container_id]\n")),(0,r.kt)("h2",{id:"advanced-configuration"},"Advanced Configuration"),(0,r.kt)("h3",{id:"custom-configuration-files"},"Custom Configuration Files"),(0,r.kt)("p",null,"Place your ImSwitch configuration files in the mounted config directory:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Host: ~/Downloads/my_config.json\n# Container: /config/my_config.json\n-e CONFIG_FILE=my_config.json\n")),(0,r.kt)("h3",{id:"development-mode"},"Development Mode"),(0,r.kt)("p",null,"For development with live code changes:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'sudo docker run -it --rm -p 8001:8001 \\\n  -e UPDATE_INSTALL_GIT=1 \\\n  -e PIP_PACKAGES="your-dev-packages" \\\n  -v $(pwd)/ImSwitch:/tmp/ImSwitch-changes \\\n  --privileged \\\n  ghcr.io/openuc2/imswitch-noqt-x64:latest\n')),(0,r.kt)("h2",{id:"next-steps"},"Next Steps"),(0,r.kt)("p",null,"After installation:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"/docs/ImSwitch/Advanced/Configuration/"},"Configure your hardware"))," - Set up cameras, stages, and other devices"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"/docs/ImSwitch/Advanced/Usage/"},"Basic usage tutorial"))," - Learn ImSwitch fundamentals"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"/docs/ImSwitch/Advanced/Usage/UC2-REST"},"UC2-REST setup"))," - Configure ESP32 communication")),(0,r.kt)("h2",{id:"related-links"},"Related Links"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/openUC2/ImSwitch"},"ImSwitch Repository")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/openUC2/ImSwitchDockerInstall"},"Docker Installation Scripts")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/orgs/openUC2/packages?repo_name=ImSwitch"},"GitHub Container Registry")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/openUC2/ImSwitch/blob/master/docker/HIK/dockerfile"},"Dockerfile Source"))))}m.isMDXComponent=!0},50526:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/Docker_ImSwitch_1-46523a83577f327deaab210ebd929265.png"},45575:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/Docker_ImSwitch_2-7143f54609aa866ebe0592a9b7dd54ca.png"},54113:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/Docker_ImSwitch_3-b8a6e65086965e68cc250f32c0fb8d4c.png"},35636:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/Docker_ImSwitch_4-e216ed2e19ac6e51603ff9a50d193aea.png"},2829:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/ImSwitchDocker-784e820fea4854c3e4c3d189f65c65e2.png"}}]);