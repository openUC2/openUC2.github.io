"use strict";(self.webpackChunkuc_2_docs=self.webpackChunkuc_2_docs||[]).push([[2101],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>d});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),s=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},m=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,p=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),u=s(a),d=n,k=u["".concat(p,".").concat(d)]||u[d]||c[d]||l;return a?r.createElement(k,i(i({ref:t},m),{},{components:a})):r.createElement(k,i({ref:t},m))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,i=new Array(l);i[0]=u;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:n,i[1]=o;for(var s=2;s<l;s++)i[s]=a[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},9414:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>c,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var r=a(87462),n=(a(67294),a(3905));const l={},i="Multi\u2011Camera Capture Demo",o={unversionedId:"Misc/MultiarrayMicroscope/index",id:"Misc/MultiarrayMicroscope/index",title:"Multi\u2011Camera Capture Demo",description:"This repository shows a minimal Python\xa0+ OpenCV example that grabs still frames from up to eight USB webcams on Linux.  Cameras are opened in pairs (to stay within the USB bus bandwidth limit), a frame is displayed in a 2\u202f\xd7\u202f3 grid, and the handles are released before the next pair is opened.",source:"@site/docs/10_Misc/01_MultiarrayMicroscope/index.md",sourceDirName:"10_Misc/01_MultiarrayMicroscope",slug:"/Misc/MultiarrayMicroscope/",permalink:"/docs/Misc/MultiarrayMicroscope/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Template for Experiment tutorials",permalink:"/docs/WORKSHOPS/Template_experiements"},next:{title:"Unpack the openUC2 Z-Microscope",permalink:"/docs/ARCHIVE/ZMicroscope/UpackZMicroscope"}},p={},s=[{value:"Requirements",id:"requirements",level:2},{value:"Quick\xa0start",id:"quickstart",level:2},{value:"Why <strong>MJPEG</strong>?",id:"why-mjpeg",level:2},{value:"The problem: <em>\u201cNo space left on device\u201d</em>",id:"the-problem-no-space-left-on-device",level:3},{value:"The solution: <em>compressed MJPEG</em>",id:"the-solution-compressed-mjpeg",level:3},{value:"How to switch to MJPEG",id:"how-to-switch-to-mjpeg",level:3},{value:"Script overview (<code>getimage15_success.py</code>)",id:"script-overview-getimage15_successpy",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"License",id:"license",level:2},{value:"Acknowledgements",id:"acknowledgements",level:2}],m={toc:s};function c(e){let{components:t,...l}=e;return(0,n.kt)("wrapper",(0,r.Z)({},m,l,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"multicamera-capture-demo"},"Multi\u2011Camera Capture Demo"),(0,n.kt)("p",null,"This repository shows a minimal ",(0,n.kt)("strong",{parentName:"p"},"Python\xa0+ OpenCV")," example that grabs still frames from up to eight USB webcams on Linux.  Cameras are opened in pairs (to stay within the USB bus bandwidth limit), a frame is displayed in a 2\u202f\xd7\u202f3 grid, and the handles are released before the next pair is opened."),(0,n.kt)("p",null,(0,n.kt)("img",{src:a(60243).Z,width:"800",height:"800"})),(0,n.kt)("h2",{id:"requirements"},"Requirements"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"component"),(0,n.kt)("th",{parentName:"tr",align:null},"tested version"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Python"),(0,n.kt)("td",{parentName:"tr",align:null},"\u2265\xa03.9")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"OpenCV"),(0,n.kt)("td",{parentName:"tr",align:null},"4.9+ (built with V4L2 support)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"NumPy"),(0,n.kt)("td",{parentName:"tr",align:null},"\u2265\xa01.21")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Matplotlib"),(0,n.kt)("td",{parentName:"tr",align:null},"\u2265\xa03.6")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Linux"),(0,n.kt)("td",{parentName:"tr",align:null},"kernel\xa05.","*"," / 6.","*"," with ",(0,n.kt)("strong",{parentName:"td"},"uvcvideo"))))),(0,n.kt)("p",null,"Install with ",(0,n.kt)("inlineCode",{parentName:"p"},"mamba env create -f environment.yml")," or manually:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"mamba create -n webcam python=3.11 opencv matplotlib numpy\nmamba activate webcam\n")),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"quickstart"},"Quick\xa0start"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"python getimage15_success.py        # grabs /dev/video1 \u2026\xa0/dev/video8\n")),(0,n.kt)("p",null,'All open\u2010error messages ("cam\xa0X: open failed", "read failed") are printed to STDOUT.'),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"why-mjpeg"},"Why ",(0,n.kt)("strong",{parentName:"h2"},"MJPEG"),"?"),(0,n.kt)("h3",{id:"the-problem-no-space-left-on-device"},"The problem: ",(0,n.kt)("em",{parentName:"h3"},"\u201cNo space left on device\u201d")),(0,n.kt)("p",null,"When many USB\u20112 webcams stream raw ",(0,n.kt)("strong",{parentName:"p"},"YUYV\xa04:2:2")," frames, the kernel driver must allocate a large number of in\u2011flight buffers.  Each 640\u202f\xd7\u202f480 frame is 614\u202fkB; at 30\u202ffps even two cameras can exceed the default ",(0,n.kt)("strong",{parentName:"p"},"usbfs","_","memory","_","mb")," limit (16\u202fMB).  The V4L2 subsystem then returns\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"-ENOSPC"),", exposed by FFmpeg / OpenCV as:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"[video4linux2,v4l2] ioctl(VIDIOC_STREAMON): No space left on device\n")),(0,n.kt)("h3",{id:"the-solution-compressed-mjpeg"},"The solution: ",(0,n.kt)("em",{parentName:"h3"},"compressed MJPEG")),(0,n.kt)("p",null,"Most UVC cameras can encode Motion\u2011JPEG in hardware.  The bulk data crossing the USB bus \u2013 and the temporary kernel buffers \u2013 shrink by a factor of 4\u201110.\xa0For the same two 640\u202f\xd7\u202f480 streams at 80\u202fKiB each, you now need <\u202f5\u202fMB of kernel memory, well below the limit."),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"\u201cForce MJPEG and it works fine \u2013 RAW eats buffer space until\xa0",(0,n.kt)("inlineCode",{parentName:"p"},"ENOSPC"),".\u201d\xa0\u2014\xa0",(0,n.kt)("em",{parentName:"p"},"\u2060opencv/opencv\xa0#23787"),"\xa0\ue200cite\ue202turn0search0\ue201")),(0,n.kt)("h3",{id:"how-to-switch-to-mjpeg"},"How to switch to MJPEG"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Programmatically")," (preferred):"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-python"},"cap = cv2.VideoCapture('/dev/video3')\ncap.set(cv2.CAP_PROP_FOURCC, cv2.VideoWriter_fourcc(*'MJPG'))\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Persistently")," with ",(0,n.kt)("inlineCode",{parentName:"p"},"v4l2-ctl"),":"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo v4l2-ctl -d /dev/video3 \\\n     --set-fmt-video=width=640,height=480,pixelformat=MJPG\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Kernel quirk")," (if the camera ignores MJPG requests):"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo modprobe -r uvcvideo\nsudo modprobe uvcvideo quirks=128   # FIX_BANDWIDTH_QUirk\n")))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"script-overview-getimage15_successpy"},"Script overview (",(0,n.kt)("inlineCode",{parentName:"h2"},"getimage15_success.py"),")"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"cam_ids = (2,4,6,8,10,12)")," \u2013 list of device numbers (",(0,n.kt)("strong",{parentName:"li"},"IMPORTANT")," This may be different on your system - here it was multiple of two for some reason, 0 was inbuilt webcam)"),(0,n.kt)("li",{parentName:"ul"},"Loop in steps of\xa02: open two cameras \u2192 grab one frame each \u2192 display in grid \u2192 release both."),(0,n.kt)("li",{parentName:"ul"},"GUI built with ",(0,n.kt)("strong",{parentName:"li"},"Matplotlib")," (",(0,n.kt)("inlineCode",{parentName:"li"},"plt.subplots(2,\u202f3)"),")."),(0,n.kt)("li",{parentName:"ul"},"Uses ",(0,n.kt)("strong",{parentName:"li"},"np.zeros")," placeholders for empty slots if you have <\u202f6 cameras."),(0,n.kt)("li",{parentName:"ul"},"Press ",(0,n.kt)("strong",{parentName:"li"},"Esc")," to exit.")),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"symptom"),(0,n.kt)("th",{parentName:"tr",align:null},"cause"),(0,n.kt)("th",{parentName:"tr",align:null},"fix"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"open failed")),(0,n.kt)("td",{parentName:"tr",align:null},"device busy (another process)"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"fuser -v /dev/video*")," then kill")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"read failed")," after a while"),(0,n.kt)("td",{parentName:"tr",align:null},"cable power loss"),(0,n.kt)("td",{parentName:"tr",align:null},"use powered hub / USB\u20113 port")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"green/pink tint"),(0,n.kt)("td",{parentName:"tr",align:null},"camera still in YUYV"),(0,n.kt)("td",{parentName:"tr",align:null},"force MJPG as above")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"high CPU usage"),(0,n.kt)("td",{parentName:"tr",align:null},"Matplotlib rendering"),(0,n.kt)("td",{parentName:"tr",align:null},"call ",(0,n.kt)("inlineCode",{parentName:"td"},"plt.pause(0.001)")," instead of tight sleep")))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"license"},"License"),(0,n.kt)("p",null,"MIT"),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"acknowledgements"},"Acknowledgements"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"OpenCV team and contributors."),(0,n.kt)("li",{parentName:"ul"},"Original discussion: ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/opencv/opencv/issues/23787"},"https://github.com/opencv/opencv/issues/23787")," (thanks to @tph-thuering for the MJPEG hint).")))}c.isMDXComponent=!0},60243:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/SETUP-d3950e337216547dc3018a1e2692285f.jpeg"}}]);